{{> header}}
<main>
  <section class="py-5 text-center container">
    <div class="row py-lg-5">
      <h1 style="font-size: 60px" class="my-4">Your Visual</h1>
      <a href="/dashboard">
      <button type="button" class="btn btn-outline-primary w-100 ms-2">Back to the dashboard<br>&larr;</button>
      </a>
    </div>
  </section>

  <section class="py-5 text-center container grid">
  <div class="visual-container">
      <div class="visual">
        <img width="1200" height="1200" src="https://picsum.photos/id/{{visual.photo_id}}/1200/1200" alt="photo" />
          <div class="quote-overlay">
          {{#getQuote quotes visual.quote_id}}
            <div class="quote-background">
            <p class="quote">{{text}}</p>
            <p class="author"><i>{{author}}</i></p>
            </div>
          {{/getQuote}}
          </div>
      </div>
    </div>
    <div class="options p-4">
      {{#getQuote quotes visual.quote_id }}
        <b>Author of the quote:</b> {{author}} <br />
        <b>Quote characters length:</b> {{text.length}} characters
      {{/getQuote}}

          <div class="btn-group w-100 my-4" role="group">
            <button id="changeImage" type="button" class="btn btn-outline-primary w-100 me-2">Change Image</button>
            <button id="changeQuote" type="button" class="btn btn-outline-primary w-100 ms-2">Change Quote</button>
          </div>      

        <div class="btn-group w-100 my-4" role="group">
          <button type="button" id="saveImage" class="btn btn-success btn-sm w-100 me-2">Save</button>
          <button type="button" class="btn btn-secondary btn-sm w-100 ms-2" onclick="window.location.reload();">Discard</button>
        </div>

        <button id="exportImage" type="button" class="btn btn-outline-primary btn-sm w-100 my-4">Export image</button>

  </section>

</main>



<script>

  const saveButton = document.getElementById('saveImage');
  const changeImageButton = document.getElementById('changeImage');
  const changeQuoteButton = document.getElementById('changeQuote');
  const exportImageButton = document.getElementById('exportImage');

  let userId = "{{visual.user_id}}";
  let quoteId = "{{visual.quote_id}}";
  let photoId = "{{visual.photo_id}}";
  let quotes = {{{json quotes}}};


exportImageButton.addEventListener('click', () => {
  const visualElement = document.querySelector('.visual');
  const imgElement = visualElement.querySelector('img');
  const textElement = visualElement.querySelector('p');
  const canvas = document.createElement('canvas');
  const ctx = canvas.getContext('2d');

  imgElement.crossOrigin = 'anonymous';
  imgElement.src = imgElement.src;

  imgElement.onload = function() {
    canvas.width = imgElement.width;
    canvas.height = imgElement.height;
    ctx.drawImage(imgElement, 0, 0, imgElement.width, imgElement.height);
    const textStyle = window.getComputedStyle(textElement);
    ctx.fillStyle = 'white';
    ctx.fillRect(0, canvas.height - 60, canvas.width, 60);
    let fontSize = parseInt(textStyle.fontSize);
    ctx.font = fontSize + 'px ' + textStyle.fontFamily;
    while (ctx.measureText(textElement.textContent).width > canvas.width) {
      fontSize--;
      ctx.font = fontSize + 'px ' + textStyle.fontFamily;
    }
    ctx.fillStyle = textStyle.color;
    ctx.textAlign = 'center';
    ctx.fillText(textElement.textContent, canvas.width / 2, canvas.height - 20);
    
    const img = new Image();
    img.src = canvas.toDataURL('image/png');

    const a = document.createElement('a');
    a.href = img.src;
    a.download = 'visual.png';
    a.click();
  };
photoId = "{{visual.photo_id}}";
  imgElement.src = imgElement.src;
});
  
  changeImageButton.addEventListener('click', () => {
    photoId = Math.floor(Math.random() * 60) + 1;
    document.querySelector('.visual img').src = `https://picsum.photos/id/${photoId}/1200/1200`;
  });


  changeQuoteButton.addEventListener('click', () => {
    const randomIndex = Math.floor(Math.random() * quotes.length);
    const newQuote = quotes[randomIndex];
    quoteId = newQuote.id;

    document.querySelector('.visual p').textContent = newQuote.text;

    document.querySelector('.visual p.author i').textContent = newQuote.author;
  });

  saveButton.addEventListener('click', () => {
    const url = window.location.pathname;
    const id = url.split('/').pop();

    const visualData = {
      user_id: parseInt(userId),
      quote_id: parseInt(quoteId),
      photo_id: photoId
    };

    let method, apiEndpoint;

    if (id === 'visual') {
      method = 'POST';
      apiEndpoint = '/api/visual';
    } else {
      method = 'PUT';
      apiEndpoint = `/api/visual/${id}`;
    }

    fetch(apiEndpoint, {
      method: method,
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(visualData),
    })
    .then(response => response.json())
    .then(data => {
      console.log('Success:', data);
    })
    .catch((error) => {
      console.error('Error:', error);
    });
  });
</script>
